def is_magic_square(square):
    """
    Check if a 4x4 square is a magic square.
    A magic square is one in which all rows, columns, both diagonals, 
    the four corners, and the center 2x2 block add up to the same number.
    This function prints all these sums before returning the result.
    
    Args:
        square (list of list of int): A 4x4 two-dimensional list.
        
    Returns:
        bool: True if the square is magic, False otherwise.
    """
    # Ensure the square is 4x4.
    if len(square) != 4 or any(len(row) != 4 for row in square):
        raise ValueError("The square must be a 4x4 array.")
    
    # Calculate the magic sum using the first row.
    magic_sum = sum(square[0])
    print("Magic sum (expected):", magic_sum)
    
    # Calculate and print each row sum.
    row_sums = []
    for i, row in enumerate(square):
        r_sum = sum(row)
        row_sums.append(r_sum)
        print(f"Row {i} sum: {r_sum}")
    
    # Calculate and print each column sum.
    col_sums = []
    for col in range(4):
        c_sum = sum(square[row][col] for row in range(4))
        col_sums.append(c_sum)
        print(f"Column {col} sum: {c_sum}")
    
    # Calculate and print the main diagonal (top-left to bottom-right) sum.
    main_diag = sum(square[i][i] for i in range(4))
    print("Main diagonal sum:", main_diag)
    
    # Calculate and print the secondary diagonal (top-right to bottom-left) sum.
    sec_diag = sum(square[i][3 - i] for i in range(4))
    print("Secondary diagonal sum:", sec_diag)
    
    # Calculate and print the sum of the four corners.
    corners_sum = square[0][0] + square[0][3] + square[3][0] + square[3][3]
    print("Corners sum:", corners_sum)
    
    # Calculate and print the sum of the center 2x2 block.
    center_sum = square[1][1] + square[1][2] + square[2][1] + square[2][2]
    print("Center 2x2 sum:", center_sum)
    
    # Verify that all calculated sums equal the magic sum.
    if (all(r == magic_sum for r in row_sums) and
        all(c == magic_sum for c in col_sums) and
        main_diag == magic_sum and
        sec_diag == magic_sum and
        corners_sum == magic_sum and
        center_sum == magic_sum):
        return True
    else:
        return False

# Example usage:
if __name__ == "__main__":
    # Magic Square generated by o3.
    o3_square = [
    [15,  8, 19, 47],
    [37, 22, 12, 18],
    [24, 17, 38, 10],
    [13, 42, 20, 14]
]

    
    print("Testing magic square generated by o3:")
    if is_magic_square(o3_square):
        print("Result: This is a magic square.\n")
    else:
        print("Result: This is NOT a magic square.\n")
    
    # Magic Square generated by r1.
    r1_magic = [
    [15,  8, 19, 47],
    [22, 25, 26, 16],
    [42,  6, 32,  9],
    [10, 50, 12, 17]
]
    
    print("Testing magic square generated by r1:")
    if is_magic_square(r1_magic):
        print("Result: This is a magic square.")
    else:
        print("Result: This is NOT a magic square.")
